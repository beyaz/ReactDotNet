<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
    </PropertyGroup>

    <ItemGroup>
      <Compile Remove="wwwroot\dist\**" />
      <Content Remove="wwwroot\dist\**" />
      <EmbeddedResource Remove="wwwroot\dist\**" />
      <None Remove="wwwroot\dist\**" />
    </ItemGroup>

    <ItemGroup>
      <Content Include="SvgFiles\twitter_30_30.svg" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\ReactWithDotNet\ReactWithDotNet.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="HtmlAgilityPack" Version="1.11.46" />
        <PackageReference Include="YamlDotNet" Version="13.0.2" />
		<PackageReference Include="Microsoft.CodeAnalysis.Compilers" Version="4.4.0-4.final" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.4.0-4.final" />
    </ItemGroup>

    <ItemGroup>
      <None Update="Content\SiteRawData.yml">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </None>
      <None Update="Content\tr\6.html">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </None>
    </ItemGroup>


    <PropertyGroup>
        <LangVersion>preview</LangVersion>
    </PropertyGroup>


	<!-- npm -->
	<ItemGroup>
		<JsFilesIdDist Include="wwwroot/dist/*.*"/>
	</ItemGroup>
	<PropertyGroup>
		<AppRoot>wwwroot\</AppRoot>		
	</PropertyGroup>
	<Target Name="_EnsureNodeEnvironment_" BeforeTargets="rebuild;build" Condition=" !Exists('$(AppRoot)node_modules') ">
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(AppRoot)" Command="npm install" />
	</Target>
	<Target Name="_NpmRunForDebug_" BeforeTargets="rebuild" Condition=" '$(Configuration)' == 'Debug' ">
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Runinning npm command: 'npm run dev'" />
		<Exec WorkingDirectory="$(AppRoot)" Command="npm run dev" />
	</Target>
	<Target Name="_NpmRunForRelease_" BeforeTargets="rebuild" Condition=" '$(Configuration)' == 'Release' ">
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Runinning npm command: 'npm run build'" />
		<Exec WorkingDirectory="$(AppRoot)" Command="npm run build" />
	</Target>

	<Target Name="_BeforePublish_" AfterTargets="ComputeFilesToPublish">
		<RemoveDir Directories="$(AppRoot)dist/" />
		<Exec WorkingDirectory="$(AppRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(AppRoot)" Command="npm run build" />
	</Target>

	<Target Name="_AfterPublish_" AfterTargets="Publish">
		<Copy SourceFiles="@(JsFilesIdDist)" DestinationFolder="$(PublishDir)/wwwroot/dist/" SkipUnchangedFiles="true" />
		<Delete Files="$(PublishDir)/ReactWithDotNet.pdb" />
		<Delete Files="$(PublishDir)/ReactWithDotNet.xml" />
		<Delete Files="$(PublishDir)/$(MSBuildProjectName).pdb" />
		<Delete Files="$(PublishDir)/$(MSBuildProjectName).xml" />

		<Delete Files="$(PublishDir)/wwwroot/index.jsx" />
		<Delete Files="$(PublishDir)/wwwroot/index-dev.jsx" />
		<Delete Files="$(PublishDir)/wwwroot/package.json" />
		<Delete Files="$(PublishDir)/wwwroot/package-lock.json" />

		<RemoveDir Directories="$(PublishDir)\wwwroot\react-with-dotnet" />

		
		
	</Target>

	

</Project>
